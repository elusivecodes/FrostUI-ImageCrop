{"version":3,"file":"frost-ui-imagecrop.js","sources":["../src/image-crop.js","../src/prototype/events.js","../src/prototype/helpers.js","../src/helpers.js","../src/prototype/load.js","../src/prototype/render.js","../src/prototype/result.js","../src/index.js"],"sourcesContent":["import $ from '@fr0st/query';\nimport { BaseComponent } from '@fr0st/ui';\n\n/**\n * ImageCrop Class\n * @class\n */\nexport default class ImageCrop extends BaseComponent {\n    /**\n     * New ImageCrop constructor.\n     * @param {HTMLElement} node The input node.\n     * @param {object} [options] The options to create the ImageCrop with.\n     */\n    constructor(node, options) {\n        super(node, options);\n\n        this._render();\n        this._events();\n\n        this._img = new Image();\n        this._reader = new FileReader();\n    }\n\n    /**\n     * Dispose the ImageCrop.\n     */\n    dispose() {\n        $.remove(this._outerContainer);\n\n        this._outerContainer = null;\n        this._container = null;\n        this._resize = null;\n        this._canvas = null;\n        this._context = null;\n        this._img = null;\n\n        super.dispose();\n    }\n\n    /**\n     * Get the image bounds.\n     * @return {Array} The image bounds.\n     */\n    getBounds() {\n        const width = this._previewWidth / this._zoom;\n        const height = this._previewHeight / this._zoom;\n        const x = (this._canvasWidth - this._offsetX) - (width / 2);\n        const y = (this._canvasHeight - this._offsetY) - (height / 2);\n\n        return [x, y, x + width, y + height];\n    }\n\n    /**\n     * Get the image zoom level.\n     * @return {number} The zoom level.\n     */\n    getZoom() {\n        return this._zoom;\n    }\n\n    /**\n     * Rotate the image (in degrees).\n     * @param {number} [amount=90] The rotation amount (in degrees).\n     */\n    rotate(amount = 90) {\n        if (!this._options.rotate || amount === 0) {\n            return;\n        }\n\n        this._updateRotation(amount);\n        this._clampZoom();\n        this._updatePreviewCanvas();\n        this._updatePreview();\n\n        $.triggerEvent(this._node, 'update.ui.imagecrop');\n    }\n\n    /**\n     * Set the image bounds.\n     * @param {number} x1 The first image x offset.\n     * @param {number} y1 The first image y offset.\n     * @param {number} x2 The second image x offset.\n     * @param {number} y2 The second image y offset.\n     */\n    setBounds(x1, y1, x2, y2) {\n        const width = x2 - x1;\n        const height = y2 - y1;\n\n        if (this._options.resize) {\n            this._resizePreview(width * this._zoom, height * this._zoom);\n        } else if (this._options.zoom) {\n            this._zoom = Math.max(this._previewWidth / width, this._previewHeight / height);\n        }\n\n        this._offsetX = this._canvasWidth - (x1 + (width / 2));\n        this._offsetY = this._canvasHeight - (y1 + (height / 2));\n\n        this._clampZoom();\n        this._clampOffset();\n        this._updatePreview();\n\n        $.triggerEvent(this._node, 'update.ui.imagecrop');\n    }\n\n    /**\n     * Set the image zoom level.\n     * @param {number} zoom The image zoom level.\n     */\n    setZoom(zoom) {\n        if (!this._options.zoom || zoom === this._zoom) {\n            return;\n        }\n\n        this._zoom = zoom;\n\n        this._clampZoom();\n        this._clampOffset();\n        this._updatePreview();\n\n        $.triggerEvent(this._node, 'update.ui.imagecrop');\n    }\n}\n","import $ from '@fr0st/query';\nimport { getPosition, getTouchPositions } from '@fr0st/ui';\n\n/**\n * Attach events for the ImageCrop.\n */\nexport function _events() {\n    let lastPos;\n\n    const downEvent = (e) => {\n        if (e.button) {\n            return false;\n        }\n\n        e.preventDefault();\n\n        lastPos = getPosition(e);\n    };\n\n    const moveEvent = (e) => {\n        const newPos = getPosition(e);\n        this._offsetX += ((newPos.x - lastPos.x) / this._zoom);\n        this._offsetY += ((newPos.y - lastPos.y) / this._zoom);\n        lastPos = newPos;\n\n        this._clampOffset();\n        this._updatePreview();\n\n        $.triggerEvent(this._node, 'update.ui.imagecrop');\n    };\n\n    const dragEvent = $.mouseDragFactory(downEvent, moveEvent);\n\n    $.addEvent(this._container, 'mousedown.ui.imagecrop touchstart.ui.imagecrop', dragEvent);\n\n    if (this._options.resize) {\n        this._eventsResize();\n    }\n\n    if (this._options.zoom) {\n        this._eventsZoom();\n    }\n};\n\n/**\n * Attach resize events.\n */\nexport function _eventsResize() {\n    let lastPos;\n\n    const downEvent = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        lastPos = getPosition(e);\n    };\n\n    const moveEvent = (e) => {\n        const newPos = getPosition(e);\n        this._previewWidth += newPos.x - lastPos.x;\n        this._previewHeight += newPos.y - lastPos.y;\n        lastPos = newPos;\n\n        this._resizePreview(this._previewWidth, this._previewHeight);\n        this._updatePreview();\n\n        $.triggerEvent(this._node, 'update.ui.imagecrop');\n    };\n\n    const dragEvent = $.mouseDragFactory(downEvent, moveEvent);\n\n    $.addEvent(this._resize, 'mousedown.ui.imagecrop', dragEvent, { passive: true });\n};\n\n/**\n * Attach zoom events.\n */\nexport function _eventsZoom() {\n    let lastDist;\n\n    const getTouchDistance = (e) => {\n        const touches = getTouchPositions(e);\n        return $._dist(touches[0].x, touches[0].y, touches[1].x, touches[1].y);\n    };\n\n    const downEvent = (e) => {\n        lastDist = getTouchDistance(e);\n    };\n\n    const moveEvent = (e) => {\n        const newDist = getTouchDistance(e);\n        const diff = newDist - lastDist;\n        lastDist = newDist;\n\n        this._zoom += diff / $._dist(0, 0, this._previewWidth, this._previewHeight);\n\n        this._clampZoom();\n        this._clampOffset();\n        this._updatePreview();\n\n        $.triggerEvent(this._node, 'update.ui.imagecrop');\n    };\n\n    const dragEvent = $.mouseDragFactory(downEvent, moveEvent, null, { touches: 2 });\n\n    $.addEvent(this._container, 'touchstart.ui.imagecrop', dragEvent, { passive: true });\n\n    $.addEvent(this._container, 'wheel.ui.imagecrop', (e) => {\n        e.preventDefault();\n\n        if (e.deltaY > 0) {\n            this._zoom -= this._options.zoomAmount;\n        } else if (e.deltaY < 0) {\n            this._zoom += this._options.zoomAmount;\n        }\n\n        this._clampZoom();\n        this._clampOffset();\n        this._updatePreview();\n\n        $.triggerEvent(this._node, 'update.ui.imagecrop');\n    });\n};\n","import $ from '@fr0st/query';\n\n/**\n * Clamp the image offset.\n */\nexport function _clampOffset() {\n    if (!this._options.enforceBoundary) {\n        return;\n    }\n\n    const minX = this._previewWidth / (this._canvasWidth * this._zoom) * this._canvasWidth / 2;\n    const minY = this._previewHeight / (this._canvasHeight * this._zoom) * this._canvasHeight / 2;\n\n    this._offsetX = $._clamp(this._offsetX, minX, this._canvasWidth - minX);\n    this._offsetY = $._clamp(this._offsetY, minY, this._canvasHeight - minY);\n};\n\n/**\n * Clamp the image zoom level.\n */\nexport function _clampZoom() {\n    this._zoom = $._clamp(this._zoom, this._options.minZoom, this._options.maxZoom);\n\n    if (!this._options.enforceBoundary) {\n        return;\n    }\n\n    const minZoom = Math.max(this._previewWidth / this._canvasWidth, this._previewHeight / this._canvasHeight);\n    this._zoom = Math.max(minZoom, this._zoom);\n};\n\n/**\n * Resize the image preview.\n * @param {number} width The preview width.\n * @param {number} height The preview height.\n */\nexport function _resizePreview(width, height) {\n    if (this._options.maxPreviewWidth) {\n        width = Math.min(width, this._options.maxPreviewWidth);\n    }\n\n    if (this._options.maxPreviewHeight) {\n        height = Math.min(height, this._options.maxPreviewHeight);\n    }\n\n    if (this._options.enforceBoundary) {\n        this._previewWidth = Math.min(width, this._canvasWidth * this._zoom);\n        this._previewHeight = Math.min(height, this._canvasHeight * this._zoom);\n\n        this._clampOffset();\n    } else {\n        this._offsetX += (width - this._previewWidth) / this._zoom / 2;\n        this._offsetY -= (height - this._previewHeight) / this._zoom / 2;\n        this._previewWidth = width;\n        this._previewHeight = height;\n    }\n\n    $.setStyle(this._outerContainer, {\n        width: `${this._previewWidth}px`,\n        height: `${this._previewHeight}px`,\n    });\n};\n\n/**\n * Update the preview.\n */\nexport function _updatePreview() {\n    const x = ((-this._canvasWidth + this._offsetX) * this._zoom) + (this._previewWidth / 2);\n    const y = ((-this._canvasHeight + this._offsetY) * this._zoom) + (this._previewHeight / 2);\n    $.setStyle(this._canvas, {\n        transform: `translate3d(${x}px, ${y}px, 0) scale(${this._zoom})`,\n    });\n};\n\n/**\n * Update the preview canvas.\n */\nexport function _updatePreviewCanvas() {\n    $.setAttribute(this._canvas, {\n        width: this._canvasWidth,\n        height: this._canvasHeight,\n    });\n\n    this._context.clearRect(0, 0, this._canvasWidth, this._canvasHeight);\n\n    this._context.save();\n    this._context.translate(this._canvasWidth / 2, this._canvasHeight / 2);\n    this._context.rotate(this._rotation * Math.PI / 180);\n\n    if (this._flipped) {\n        this._context.scale(-1, 1);\n    }\n\n    this._context.drawImage(this._img, -this._img.width / 2, -this._img.height / 2, this._img.width, this._img.height);\n    this._context.restore();\n};\n\n/**\n * Adjust the rotation by an amount.\n * @param {number} amount The amount.\n */\nexport function _updateRotation(amount) {\n    const rotation = (this._rotation + amount) % 360;\n\n    if (rotation % 180 === 0) {\n        this._canvasWidth = this._img.width;\n        this._canvasHeight = this._img.height;\n    } else {\n        this._canvasWidth = this._img.height;\n        this._canvasHeight = this._img.width;\n    }\n\n    const newRotation = rotation >= this._rotation ?\n        rotation :\n        rotation + 360;\n\n    while (this._rotation < newRotation) {\n        const offsetX = this._offsetX;\n        const offsetY = this._offsetY;\n\n        if (this._rotation % 180 === 0) {\n            this._offsetX = this._img.height - offsetY;\n        } else {\n            this._offsetX = this._img.width - offsetY;\n        }\n        this._offsetY = offsetX;\n\n        this._rotation += 90;\n    }\n\n    this._rotation %= 360;\n};\n","/**\n * Get the EXIF orientation.\n * @param {ArrayBuffer} data The file data.\n * @return {number} The EXIF orientation.\n */\nexport function getOrientation(data) {\n    const view = new DataView(data);\n    const getInt16 = (offset, littleEndian = false) => view.getUint16(offset, littleEndian);\n    const getInt32 = (offset, littleEndian = false) => view.getUint32(offset, littleEndian);\n\n    if (getInt16(0) != 0xffd8) {\n        return -2;\n    }\n\n    let offset = 2;\n    while (offset < view.byteLength) {\n        if (getInt16(offset + 2) <= 8) {\n            return -1;\n        }\n\n        const marker = getInt16(offset);\n        offset += 2;\n\n        if ((marker & 0xff00) != 0xff00) {\n            break;\n        }\n\n        if (marker != 0xffe1) {\n            offset += getInt16(offset);\n            continue;\n        }\n\n        offset += 2;\n        if (getInt32(offset) != 0x45786966) {\n            return -1;\n        }\n\n        offset += 6;\n        const little = getInt16(offset) == 0x4949;\n        offset += getInt32(offset + 4, little);\n        const tags = getInt16(offset, little) * 12;\n        offset += 2;\n\n        for (let i = 0; i < tags; i += 12) {\n            if (getInt16(offset + i, little) == 0x0112) {\n                return getInt16(offset + i + 8, little);\n            }\n        }\n    }\n\n    return -1;\n};\n","import $ from '@fr0st/query';\nimport { getOrientation } from './../helpers.js';\n\n/**\n * Load a file.\n * @param {Blob} file The file.\n * @param {object} [options] Options for loading the file.\n * @param {number} [options.x] The initial x offset.\n * @param {number} [options.y] The initial y offset.\n * @param {number} [options.zoom] The initial zoom.\n * @return {Promise} A promise that resolves when the image is loaded.\n */\nexport function load(file, options = {}) {\n    const { x = null, y = null, zoom = null } = options;\n\n    this._rotation = 0;\n    this._offsetX = x;\n    this._offsetY = y;\n    this._zoom = zoom;\n\n    return new Promise((resolve, reject) => {\n        this._reader.onerror = reject;\n        this._img.onerror = reject;\n\n        this._img.onload = (_) => {\n            this._previewWidth = this._options.previewWidth;\n            this._previewHeight = this._options.previewHeight;\n\n            $.setStyle(this._outerContainer, {\n                width: `${this._previewWidth}px`,\n                height: `${this._previewHeight}px`,\n            });\n\n            this._canvasWidth = this._img.width;\n            this._canvasHeight = this._img.height;\n\n            if (this._offsetX === null) {\n                this._offsetX = this._canvasWidth / 2;\n            }\n\n            if (this._offsetY === null) {\n                this._offsetY = this._canvasHeight / 2;\n            }\n\n            if (this._zoom === null) {\n                this._zoom = Math.min(this._previewWidth / this._canvasWidth, this._previewHeight / this._canvasHeight);\n            }\n\n            let rotation;\n            switch (this._orientation) {\n                case 2:\n                    this._flipped = true;\n                    break;\n                case 3:\n                    rotation = 180;\n                    break;\n                case 4:\n                    this._flipped = true;\n                    rotation = 180;\n                    break;\n                case 5:\n                    this._flipped = true;\n                    rotation = 270;\n                    break;\n                case 6:\n                    rotation = 270;\n                    break;\n                case 7:\n                    this._flipped = true;\n                    rotation = 90;\n                    break;\n                case 8:\n                    rotation = 90;\n                    break;\n            }\n\n            if (rotation) {\n                this._updateRotation(rotation);\n            }\n\n            this._clampZoom();\n            this._clampOffset();\n            this._updatePreviewCanvas();\n            this._updatePreview();\n\n            resolve();\n        };\n\n        const loadImg = (_) => {\n            this._reader.onload = (_) => {\n                this._img.src = this._reader.result;\n            };\n\n            this._reader.readAsDataURL(file);\n        };\n\n        if (this._options.exifOrientation) {\n            this._reader.onload = (_) => {\n                this._orientation = getOrientation(this._reader.result);\n\n                loadImg();\n            };\n\n            this._reader.readAsArrayBuffer(file);\n        } else {\n            loadImg();\n        }\n    });\n};\n","import $ from '@fr0st/query';\n\n/**\n * Render the ImageCrop.\n */\nexport function _render() {\n    this._outerContainer = $.create('div', {\n        class: this.constructor.classes.outerContainer,\n    });\n\n    this._container = $.create('div', {\n        class: this.constructor.classes.container,\n        style: {\n            boxSizing: 'content-box'\n        },\n    });\n\n    if (this._options.circle) {\n        $.addClass(this._container, this.constructor.classes.circle);\n    }\n\n    if (this._options.resize) {\n        this._resize = $.create('div', {\n            class: this.constructor.classes.resize,\n            style: {\n                width: '5px',\n                height: '5px',\n                backgroundColor: 'black',\n                cursor: 'nwse-resize',\n                zIndex: 1,\n            },\n        });\n        $.append(this._outerContainer, this._resize);\n    }\n\n    this._canvas = $.create('canvas', {\n        class: this.constructor.classes.preview,\n        style: {\n            transformOrigin: '0 0',\n        },\n    });\n\n    this._context = this._canvas.getContext('2d');\n\n    $.append(this._container, this._canvas);\n    $.append(this._outerContainer, this._container);\n    $.append(this._node, this._outerContainer);\n};\n","import $ from '@fr0st/query';\n\n/**\n * Get the rendered image.\n * @param {object} [options] Options for rendering the image.\n * @param {string} [options.type=base64] The type of image to render.\n * @param {string} [options.format=png] The image format to render.\n * @param {string|object} [options.size=viewport] The size to render the image.\n * @param {number} [options.quality=1] The image quality to render.\n * @param {Boolean} [circle] Whether to render the image as a circle.\n * @param {string} [background] The background color to render the image with.\n * @return {Promise} A promise that resolves with the rendered image.\n */\nexport function result(options = {}) {\n    const { type = 'base64', format = 'png', size = 'viewport', quality = 1, circle = false, background = null } = options;\n\n    const canvas = $.create('canvas');\n    const context = canvas.getContext('2d');\n\n    let width = this._previewWidth;\n    let height = this._previewHeight;\n    if (size === 'original') {\n        width /= this._zoom;\n        height /= this._zoom;\n    } else if ($._isObject(size)) {\n        if (size.width && size.height) {\n            width = size.width;\n            height = size.height;\n        } else {\n            const ratio = width / height;\n            if (size.width) {\n                width = size.width;\n                height = width / ratio;\n            } else if (size.height) {\n                height = size.height;\n                width = height * ratio;\n            }\n        }\n    }\n\n    const ratio = width / height;\n\n    if (this._options.maxWidth) {\n        width = Math.min(width, this._options.maxWidth);\n        height = width / ratio;\n    }\n\n    if (this._options.maxHeight) {\n        height = Math.min(height, this._options.maxHeight);\n        width = height * ratio;\n    }\n\n    $.setAttribute(canvas, {\n        width: `${width}px`,\n        height: `${height}px`,\n    });\n\n    const [x1, y1, x2, y2] = this.getBounds();\n    context.drawImage(this._canvas, x1, y1, x2 - x1, y2 - y1, 0, 0, width, height);\n\n    if (circle || this._options.circle) {\n        context.globalCompositeOperation = 'destination-in';\n        context.beginPath();\n        context.arc(width / 2, height / 2, width / 2, 0, Math.PI * 2);\n        context.closePath();\n        context.fill();\n    }\n\n    if (background) {\n        context.globalCompositeOperation = 'destination-over';\n        context.fillStyle = background;\n        context.rect(0, 0, width, height);\n        context.fill();\n        context.fillStyle = '#000';\n    }\n\n    context.globalCompositeOperation = 'source-over';\n\n    return new Promise((resolve) => {\n        switch (type) {\n            case 'base64':\n                const result = canvas.toDataURL(`image/${format}`, quality);\n                resolve(result);\n                break;\n            case 'blob':\n                canvas.toBlob(resolve, `image/${format}`, quality);\n                break;\n            default:\n                resolve(canvas);\n                break;\n        }\n    });\n};\n","import { initComponent } from '@fr0st/ui';\nimport ImageCrop from './image-crop.js';\nimport { _events, _eventsResize, _eventsZoom } from './prototype/events.js';\nimport { _clampOffset, _clampZoom, _resizePreview, _updatePreview, _updatePreviewCanvas, _updateRotation } from './prototype/helpers.js';\nimport { load } from './prototype/load.js';\nimport { _render } from './prototype/render.js';\nimport { result } from './prototype/result.js';\n\n// ImageCrop default options\nImageCrop.defaults = {\n    previewWidth: 300,\n    previewHeight: 300,\n    maxPreviewWidth: null,\n    maxPreviewHeight: null,\n    maxWidth: null,\n    maxHeight: null,\n    minZoom: .1,\n    maxZoom: 10,\n    zoomAmount: .1,\n    circle: false,\n    exifOrientation: true,\n    zoom: true,\n    resize: false,\n    rotate: true,\n    enforceBoundary: true,\n};\n\n// ImageCrop classes\nImageCrop.classes = {\n    circle: 'rounded-circle',\n    container: 'position-relative w-100 h-100 overflow-hidden border',\n    outerContainer: 'position-relative',\n    preview: 'position-absolute top-0 left-0',\n    resize: 'position-absolute top-100 start-100',\n};\n\n// ImageCrop prototype\nconst proto = ImageCrop.prototype;\n\nproto.load = load;\nproto.result = result;\nproto._clampOffset = _clampOffset;\nproto._clampZoom = _clampZoom;\nproto._events = _events;\nproto._eventsResize = _eventsResize;\nproto._eventsZoom = _eventsZoom;\nproto._render = _render;\nproto._resizePreview = _resizePreview;\nproto._updatePreview = _updatePreview;\nproto._updatePreviewCanvas = _updatePreviewCanvas;\nproto._updateRotation = _updateRotation;\n\n// ImageCrop init\ninitComponent('imagecrop', ImageCrop);\n\nexport default ImageCrop;\n"],"names":["BaseComponent","getPosition","getTouchPositions","initComponent"],"mappings":"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"}