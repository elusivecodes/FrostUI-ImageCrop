{"version":3,"names":["ImageCrop","BaseComponent","constructor","node","options","super","this","_render","_events","_img","Image","_reader","FileReader","dispose","$","remove","_outerContainer","_container","_resize","_canvas","_context","getBounds","width","_previewWidth","_zoom","height","_previewHeight","x","_canvasWidth","_offsetX","y","_canvasHeight","_offsetY","getZoom","rotate","amount","_options","_updateRotation","_clampZoom","_updatePreviewCanvas","_updatePreview","triggerEvent","_node","setBounds","x1","y1","x2","y2","resize","_resizePreview","zoom","Math","max","_clampOffset","setZoom","defaults","previewWidth","previewHeight","maxPreviewWidth","maxPreviewHeight","maxWidth","maxHeight","minZoom","maxZoom","zoomAmount","circle","exifOrientation","enforceBoundary","classes","container","outerContainer","preview","proto","prototype","load","file","_rotation","Promise","resolve","reject","onerror","onload","_","rotation","setStyle","min","_orientation","_flipped","loadImg","src","result","readAsDataURL","data","view","DataView","getInt16","offset","littleEndian","getUint16","getInt32","getUint32","byteLength","marker","little","tags","i","getOrientation","readAsArrayBuffer","type","format","size","quality","background","canvas","create","context","getContext","_isObject","ratio","setAttribute","drawImage","globalCompositeOperation","beginPath","arc","PI","closePath","fill","fillStyle","rect","toDataURL","toBlob","minX","minY","_clamp","lastPos","dragEvent","mouseDragFactory","e","button","getPosition","newPos","addEvent","_eventsResize","_eventsZoom","stopPropagation","lastDist","getTouchDistance","touches","getTouchPositions","_dist","newDist","diff","preventDefault","deltaY","class","style","boxSizing","addClass","backgroundColor","cursor","zIndex","append","transformOrigin","transform","clearRect","save","translate","scale","restore","newRotation","offsetX","offsetY","initComponent"],"sources":["../src/image-crop.js","../src/index.js","../src/prototype/load.js","../src/helpers.js","../src/prototype/result.js","../src/prototype/helpers.js","../src/prototype/events.js","../src/prototype/render.js"],"sourcesContent":["import $ from '@fr0st/query';\nimport { BaseComponent } from '@fr0st/ui';\n\n/**\n * ImageCrop Class\n * @class\n */\nexport default class ImageCrop extends BaseComponent {\n    /**\n     * New ImageCrop constructor.\n     * @param {HTMLElement} node The input node.\n     * @param {object} [options] The options to create the ImageCrop with.\n     */\n    constructor(node, options) {\n        super(node, options);\n\n        this._render();\n        this._events();\n\n        this._img = new Image();\n        this._reader = new FileReader();\n    }\n\n    /**\n     * Dispose the ImageCrop.\n     */\n    dispose() {\n        $.remove(this._outerContainer);\n\n        this._outerContainer = null;\n        this._container = null;\n        this._resize = null;\n        this._canvas = null;\n        this._context = null;\n        this._img = null;\n\n        super.dispose();\n    }\n\n    /**\n     * Get the image bounds.\n     * @return {Array} The image bounds.\n     */\n    getBounds() {\n        const width = this._previewWidth / this._zoom;\n        const height = this._previewHeight / this._zoom;\n        const x = (this._canvasWidth - this._offsetX) - (width / 2);\n        const y = (this._canvasHeight - this._offsetY) - (height / 2);\n\n        return [x, y, x + width, y + height];\n    }\n\n    /**\n     * Get the image zoom level.\n     * @return {number} The zoom level.\n     */\n    getZoom() {\n        return this._zoom;\n    }\n\n    /**\n     * Rotate the image (in degrees).\n     * @param {number} [amount=90] The rotation amount (in degrees).\n     */\n    rotate(amount = 90) {\n        if (!this._options.rotate || amount === 0) {\n            return;\n        }\n\n        this._updateRotation(amount);\n        this._clampZoom();\n        this._updatePreviewCanvas();\n        this._updatePreview();\n\n        $.triggerEvent(this._node, 'update.ui.imagecrop');\n    }\n\n    /**\n     * Set the image bounds.\n     * @param {number} x1 The first image x offset.\n     * @param {number} y1 The first image y offset.\n     * @param {number} x2 The second image x offset.\n     * @param {number} y2 The second image y offset.\n     */\n    setBounds(x1, y1, x2, y2) {\n        const width = x2 - x1;\n        const height = y2 - y1;\n\n        if (this._options.resize) {\n            this._resizePreview(width * this._zoom, height * this._zoom);\n        } else if (this._options.zoom) {\n            this._zoom = Math.max(this._previewWidth / width, this._previewHeight / height);\n        }\n\n        this._offsetX = this._canvasWidth - (x1 + (width / 2));\n        this._offsetY = this._canvasHeight - (y1 + (height / 2));\n\n        this._clampZoom();\n        this._clampOffset();\n        this._updatePreview();\n\n        $.triggerEvent(this._node, 'update.ui.imagecrop');\n    }\n\n    /**\n     * Set the image zoom level.\n     * @param {number} zoom The image zoom level.\n     */\n    setZoom(zoom) {\n        if (!this._options.zoom || zoom === this._zoom) {\n            return;\n        }\n\n        this._zoom = zoom;\n\n        this._clampZoom();\n        this._clampOffset();\n        this._updatePreview();\n\n        $.triggerEvent(this._node, 'update.ui.imagecrop');\n    }\n}\n","import { initComponent } from '@fr0st/ui';\nimport ImageCrop from './image-crop.js';\nimport { _events, _eventsResize, _eventsZoom } from './prototype/events.js';\nimport { _clampOffset, _clampZoom, _resizePreview, _updatePreview, _updatePreviewCanvas, _updateRotation } from './prototype/helpers.js';\nimport { load } from './prototype/load.js';\nimport { _render } from './prototype/render.js';\nimport { result } from './prototype/result.js';\n\n// ImageCrop default options\nImageCrop.defaults = {\n    previewWidth: 300,\n    previewHeight: 300,\n    maxPreviewWidth: null,\n    maxPreviewHeight: null,\n    maxWidth: null,\n    maxHeight: null,\n    minZoom: .1,\n    maxZoom: 10,\n    zoomAmount: .1,\n    circle: false,\n    exifOrientation: true,\n    zoom: true,\n    resize: false,\n    rotate: true,\n    enforceBoundary: true,\n};\n\n// ImageCrop classes\nImageCrop.classes = {\n    circle: 'rounded-circle',\n    container: 'position-relative w-100 h-100 overflow-hidden border',\n    outerContainer: 'position-relative',\n    preview: 'position-absolute top-0 left-0',\n    resize: 'position-absolute top-100 start-100',\n};\n\n// ImageCrop prototype\nconst proto = ImageCrop.prototype;\n\nproto.load = load;\nproto.result = result;\nproto._clampOffset = _clampOffset;\nproto._clampZoom = _clampZoom;\nproto._events = _events;\nproto._eventsResize = _eventsResize;\nproto._eventsZoom = _eventsZoom;\nproto._render = _render;\nproto._resizePreview = _resizePreview;\nproto._updatePreview = _updatePreview;\nproto._updatePreviewCanvas = _updatePreviewCanvas;\nproto._updateRotation = _updateRotation;\n\n// ImageCrop init\ninitComponent('imagecrop', ImageCrop);\n\nexport default ImageCrop;\n","import $ from '@fr0st/query';\nimport { getOrientation } from './../helpers.js';\n\n/**\n * Load a file.\n * @param {Blob} file The file.\n * @param {object} [options] Options for loading the file.\n * @param {number} [options.x] The initial x offset.\n * @param {number} [options.y] The initial y offset.\n * @param {number} [options.zoom] The initial zoom.\n * @return {Promise} A promise that resolves when the image is loaded.\n */\nexport function load(file, options = {}) {\n    const { x = null, y = null, zoom = null } = options;\n\n    this._rotation = 0;\n    this._offsetX = x;\n    this._offsetY = y;\n    this._zoom = zoom;\n\n    return new Promise((resolve, reject) => {\n        this._reader.onerror = reject;\n        this._img.onerror = reject;\n\n        this._img.onload = (_) => {\n            this._previewWidth = this._options.previewWidth;\n            this._previewHeight = this._options.previewHeight;\n\n            $.setStyle(this._outerContainer, {\n                width: `${this._previewWidth}px`,\n                height: `${this._previewHeight}px`,\n            });\n\n            this._canvasWidth = this._img.width;\n            this._canvasHeight = this._img.height;\n\n            if (this._offsetX === null) {\n                this._offsetX = this._canvasWidth / 2;\n            }\n\n            if (this._offsetY === null) {\n                this._offsetY = this._canvasHeight / 2;\n            }\n\n            if (this._zoom === null) {\n                this._zoom = Math.min(this._previewWidth / this._canvasWidth, this._previewHeight / this._canvasHeight);\n            }\n\n            let rotation;\n            switch (this._orientation) {\n                case 2:\n                    this._flipped = true;\n                    break;\n                case 3:\n                    rotation = 180;\n                    break;\n                case 4:\n                    this._flipped = true;\n                    rotation = 180;\n                    break;\n                case 5:\n                    this._flipped = true;\n                    rotation = 270;\n                    break;\n                case 6:\n                    rotation = 270;\n                    break;\n                case 7:\n                    this._flipped = true;\n                    rotation = 90;\n                    break;\n                case 8:\n                    rotation = 90;\n                    break;\n            }\n\n            if (rotation) {\n                this._updateRotation(rotation);\n            }\n\n            this._clampZoom();\n            this._clampOffset();\n            this._updatePreviewCanvas();\n            this._updatePreview();\n\n            resolve();\n        };\n\n        const loadImg = (_) => {\n            this._reader.onload = (_) => {\n                this._img.src = this._reader.result;\n            };\n\n            this._reader.readAsDataURL(file);\n        };\n\n        if (this._options.exifOrientation) {\n            this._reader.onload = (_) => {\n                this._orientation = getOrientation(this._reader.result);\n\n                loadImg();\n            };\n\n            this._reader.readAsArrayBuffer(file);\n        } else {\n            loadImg();\n        }\n    });\n};\n","/**\n * Get the EXIF orientation.\n * @param {ArrayBuffer} data The file data.\n * @return {number} The EXIF orientation.\n */\nexport function getOrientation(data) {\n    const view = new DataView(data);\n    const getInt16 = (offset, littleEndian = false) => view.getUint16(offset, littleEndian);\n    const getInt32 = (offset, littleEndian = false) => view.getUint32(offset, littleEndian);\n\n    if (getInt16(0) != 0xffd8) {\n        return -2;\n    }\n\n    let offset = 2;\n    while (offset < view.byteLength) {\n        if (getInt16(offset + 2) <= 8) {\n            return -1;\n        }\n\n        const marker = getInt16(offset);\n        offset += 2;\n\n        if ((marker & 0xff00) != 0xff00) {\n            break;\n        }\n\n        if (marker != 0xffe1) {\n            offset += getInt16(offset);\n            continue;\n        }\n\n        offset += 2;\n        if (getInt32(offset) != 0x45786966) {\n            return -1;\n        }\n\n        offset += 6;\n        const little = getInt16(offset) == 0x4949;\n        offset += getInt32(offset + 4, little);\n        const tags = getInt16(offset, little) * 12;\n        offset += 2;\n\n        for (let i = 0; i < tags; i += 12) {\n            if (getInt16(offset + i, little) == 0x0112) {\n                return getInt16(offset + i + 8, little);\n            }\n        }\n    }\n\n    return -1;\n};\n","import $ from '@fr0st/query';\n\n/**\n * Get the rendered image.\n * @param {object} [options] Options for rendering the image.\n * @param {string} [options.type=base64] The type of image to render.\n * @param {string} [options.format=png] The image format to render.\n * @param {string|object} [options.size=viewport] The size to render the image.\n * @param {number} [options.quality=1] The image quality to render.\n * @param {Boolean} [circle] Whether to render the image as a circle.\n * @param {string} [background] The background color to render the image with.\n * @return {Promise} A promise that resolves with the rendered image.\n */\nexport function result(options = {}) {\n    const { type = 'base64', format = 'png', size = 'viewport', quality = 1, circle = false, background = null } = options;\n\n    const canvas = $.create('canvas');\n    const context = canvas.getContext('2d');\n\n    let width = this._previewWidth;\n    let height = this._previewHeight;\n    if (size === 'original') {\n        width /= this._zoom;\n        height /= this._zoom;\n    } else if ($._isObject(size)) {\n        if (size.width && size.height) {\n            width = size.width;\n            height = size.height;\n        } else {\n            const ratio = width / height;\n            if (size.width) {\n                width = size.width;\n                height = width / ratio;\n            } else if (size.height) {\n                height = size.height;\n                width = height * ratio;\n            }\n        }\n    }\n\n    const ratio = width / height;\n\n    if (this._options.maxWidth) {\n        width = Math.min(width, this._options.maxWidth);\n        height = width / ratio;\n    }\n\n    if (this._options.maxHeight) {\n        height = Math.min(height, this._options.maxHeight);\n        width = height * ratio;\n    }\n\n    $.setAttribute(canvas, {\n        width: `${width}px`,\n        height: `${height}px`,\n    });\n\n    const [x1, y1, x2, y2] = this.getBounds();\n    context.drawImage(this._canvas, x1, y1, x2 - x1, y2 - y1, 0, 0, width, height);\n\n    if (circle || this._options.circle) {\n        context.globalCompositeOperation = 'destination-in';\n        context.beginPath();\n        context.arc(width / 2, height / 2, width / 2, 0, Math.PI * 2);\n        context.closePath();\n        context.fill();\n    }\n\n    if (background) {\n        context.globalCompositeOperation = 'destination-over';\n        context.fillStyle = background;\n        context.rect(0, 0, width, height);\n        context.fill();\n        context.fillStyle = '#000';\n    }\n\n    context.globalCompositeOperation = 'source-over';\n\n    return new Promise((resolve) => {\n        switch (type) {\n            case 'base64':\n                const result = canvas.toDataURL(`image/${format}`, quality);\n                resolve(result);\n                break;\n            case 'blob':\n                canvas.toBlob(resolve, `image/${format}`, quality);\n                break;\n            default:\n                resolve(canvas);\n                break;\n        }\n    });\n};\n","import $ from '@fr0st/query';\n\n/**\n * Clamp the image offset.\n */\nexport function _clampOffset() {\n    if (!this._options.enforceBoundary) {\n        return;\n    }\n\n    const minX = this._previewWidth / (this._canvasWidth * this._zoom) * this._canvasWidth / 2;\n    const minY = this._previewHeight / (this._canvasHeight * this._zoom) * this._canvasHeight / 2;\n\n    this._offsetX = $._clamp(this._offsetX, minX, this._canvasWidth - minX);\n    this._offsetY = $._clamp(this._offsetY, minY, this._canvasHeight - minY);\n};\n\n/**\n * Clamp the image zoom level.\n */\nexport function _clampZoom() {\n    this._zoom = $._clamp(this._zoom, this._options.minZoom, this._options.maxZoom);\n\n    if (!this._options.enforceBoundary) {\n        return;\n    }\n\n    const minZoom = Math.max(this._previewWidth / this._canvasWidth, this._previewHeight / this._canvasHeight);\n    this._zoom = Math.max(minZoom, this._zoom);\n};\n\n/**\n * Resize the image preview.\n * @param {number} width The preview width.\n * @param {number} height The preview height.\n */\nexport function _resizePreview(width, height) {\n    if (this._options.maxPreviewWidth) {\n        width = Math.min(width, this._options.maxPreviewWidth);\n    }\n\n    if (this._options.maxPreviewHeight) {\n        height = Math.min(height, this._options.maxPreviewHeight);\n    }\n\n    if (this._options.enforceBoundary) {\n        this._previewWidth = Math.min(width, this._canvasWidth * this._zoom);\n        this._previewHeight = Math.min(height, this._canvasHeight * this._zoom);\n\n        this._clampOffset();\n    } else {\n        this._offsetX += (width - this._previewWidth) / this._zoom / 2;\n        this._offsetY -= (height - this._previewHeight) / this._zoom / 2;\n        this._previewWidth = width;\n        this._previewHeight = height;\n    }\n\n    $.setStyle(this._outerContainer, {\n        width: `${this._previewWidth}px`,\n        height: `${this._previewHeight}px`,\n    });\n};\n\n/**\n * Update the preview.\n */\nexport function _updatePreview() {\n    const x = ((-this._canvasWidth + this._offsetX) * this._zoom) + (this._previewWidth / 2);\n    const y = ((-this._canvasHeight + this._offsetY) * this._zoom) + (this._previewHeight / 2);\n    $.setStyle(this._canvas, {\n        transform: `translate3d(${x}px, ${y}px, 0) scale(${this._zoom})`,\n    });\n};\n\n/**\n * Update the preview canvas.\n */\nexport function _updatePreviewCanvas() {\n    $.setAttribute(this._canvas, {\n        width: this._canvasWidth,\n        height: this._canvasHeight,\n    });\n\n    this._context.clearRect(0, 0, this._canvasWidth, this._canvasHeight);\n\n    this._context.save();\n    this._context.translate(this._canvasWidth / 2, this._canvasHeight / 2);\n    this._context.rotate(this._rotation * Math.PI / 180);\n\n    if (this._flipped) {\n        this._context.scale(-1, 1);\n    }\n\n    this._context.drawImage(this._img, -this._img.width / 2, -this._img.height / 2, this._img.width, this._img.height);\n    this._context.restore();\n};\n\n/**\n * Adjust the rotation by an amount.\n * @param {number} amount The amount.\n */\nexport function _updateRotation(amount) {\n    const rotation = (this._rotation + amount) % 360;\n\n    if (rotation % 180 === 0) {\n        this._canvasWidth = this._img.width;\n        this._canvasHeight = this._img.height;\n    } else {\n        this._canvasWidth = this._img.height;\n        this._canvasHeight = this._img.width;\n    }\n\n    const newRotation = rotation >= this._rotation ?\n        rotation :\n        rotation + 360;\n\n    while (this._rotation < newRotation) {\n        const offsetX = this._offsetX;\n        const offsetY = this._offsetY;\n\n        if (this._rotation % 180 === 0) {\n            this._offsetX = this._img.height - offsetY;\n        } else {\n            this._offsetX = this._img.width - offsetY;\n        }\n        this._offsetY = offsetX;\n\n        this._rotation += 90;\n    }\n\n    this._rotation %= 360;\n};\n","import $ from '@fr0st/query';\nimport { getPosition, getTouchPositions } from '@fr0st/ui';\n\n/**\n * Attach events for the ImageCrop.\n */\nexport function _events() {\n    let lastPos;\n\n    const downEvent = (e) => {\n        if (e.button) {\n            return false;\n        }\n\n        lastPos = getPosition(e);\n    };\n\n    const moveEvent = (e) => {\n        const newPos = getPosition(e);\n        this._offsetX += ((newPos.x - lastPos.x) / this._zoom);\n        this._offsetY += ((newPos.y - lastPos.y) / this._zoom);\n        lastPos = newPos;\n\n        this._clampOffset();\n        this._updatePreview();\n\n        $.triggerEvent(this._node, 'update.ui.imagecrop');\n    };\n\n    const dragEvent = $.mouseDragFactory(downEvent, moveEvent);\n\n    $.addEvent(this._container, 'mousedown.ui.imagecrop touchstart.ui.imagecrop', dragEvent);\n\n    if (this._options.resize) {\n        this._eventsResize();\n    }\n\n    if (this._options.zoom) {\n        this._eventsZoom();\n    }\n};\n\n/**\n * Attach resize events.\n */\nexport function _eventsResize() {\n    let lastPos;\n\n    const downEvent = (e) => {\n        e.stopPropagation();\n\n        lastPos = getPosition(e);\n    };\n\n    const moveEvent = (e) => {\n        const newPos = getPosition(e);\n        this._previewWidth += newPos.x - lastPos.x;\n        this._previewHeight += newPos.y - lastPos.y;\n        lastPos = newPos;\n\n        this._resizePreview(this._previewWidth, this._previewHeight);\n        this._updatePreview();\n\n        $.triggerEvent(this._node, 'update.ui.imagecrop');\n    };\n\n    const dragEvent = $.mouseDragFactory(downEvent, moveEvent);\n\n    $.addEvent(this._resize, 'mousedown.ui.imagecrop', dragEvent);\n};\n\n/**\n * Attach zoom events.\n */\nexport function _eventsZoom() {\n    let lastDist;\n\n    const getTouchDistance = (e) => {\n        const touches = getTouchPositions(e);\n        return $._dist(touches[0].x, touches[0].y, touches[1].x, touches[1].y);\n    };\n\n    const downEvent = (e) => {\n        lastDist = getTouchDistance(e);\n    };\n\n    const moveEvent = (e) => {\n        const newDist = getTouchDistance(e);\n        const diff = newDist - lastDist;\n        lastDist = newDist;\n\n        this._zoom += diff / $._dist(0, 0, this._previewWidth, this._previewHeight);\n\n        this._clampZoom();\n        this._clampOffset();\n        this._updatePreview();\n\n        $.triggerEvent(this._node, 'update.ui.imagecrop');\n    };\n\n    const dragEvent = $.mouseDragFactory(downEvent, moveEvent, null, { touches: 2 });\n\n    $.addEvent(this._container, 'touchstart.ui.imagecrop', dragEvent);\n\n    $.addEvent(this._container, 'wheel.ui.imagecrop', (e) => {\n        e.preventDefault();\n\n        if (e.deltaY > 0) {\n            this._zoom -= this._options.zoomAmount;\n        } else if (e.deltaY < 0) {\n            this._zoom += this._options.zoomAmount;\n        }\n\n        this._clampZoom();\n        this._clampOffset();\n        this._updatePreview();\n\n        $.triggerEvent(this._node, 'update.ui.imagecrop');\n    });\n};\n","import $ from '@fr0st/query';\n\n/**\n * Render the ImageCrop.\n */\nexport function _render() {\n    this._outerContainer = $.create('div', {\n        class: this.constructor.classes.outerContainer,\n    });\n\n    this._container = $.create('div', {\n        class: this.constructor.classes.container,\n        style: {\n            boxSizing: 'content-box',\n        },\n    });\n\n    if (this._options.circle) {\n        $.addClass(this._container, this.constructor.classes.circle);\n    }\n\n    if (this._options.resize) {\n        this._resize = $.create('div', {\n            class: this.constructor.classes.resize,\n            style: {\n                width: '5px',\n                height: '5px',\n                backgroundColor: 'black',\n                cursor: 'nwse-resize',\n                zIndex: 1,\n            },\n        });\n        $.append(this._outerContainer, this._resize);\n    }\n\n    this._canvas = $.create('canvas', {\n        class: this.constructor.classes.preview,\n        style: {\n            transformOrigin: '0 0',\n        },\n    });\n\n    this._context = this._canvas.getContext('2d');\n\n    $.append(this._container, this._canvas);\n    $.append(this._outerContainer, this._container);\n    $.append(this._node, this._outerContainer);\n};\n"],"mappings":"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","ignoreList":[]}